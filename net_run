#!/bin/bash

# Get unique container names
ous="ous_$(whoami)"
relay="relay_$(whoami)"

# Get unique network names
veth0="veth0_$(whoami)"
veth1="veth1_$(whoami)"
#eth0="eth0_$(whoami)"

docker exec --privileged -u root $ous route del default
koko -D $ous,$veth0 2> /dev/null
koko -d $ous,$veth0,172.17.31.2/16 -d $relay,$veth1,172.17.31.100/24 || exit 1
docker exec --privileged -u root $ous ethtool -K $veth0 tso off gro off gso off tx off
docker exec --privileged -u root $relay ethtool -K eth0 tso off gro off gso off tx off
docker exec --privileged -u root $relay ethtool -K $veth1 tso off gro off gso off tx off
docker exec --privileged -u root $relay ifconfig eth0 mtu 9000
docker exec --privileged -u root $relay ifconfig $veth1 mtu 9000
docker exec --privileged -u root $ous ifconfig $veth0 mtu 9000
docker exec --privileged -u root $ous route add default gw 172.17.0.1
docker exec --privileged -u root $relay bash -c "echo 0 > /proc/sys/net/ipv4/ip_forward"

#Check to see whether hosts's docker interface has turned off off-loading

tso=$(ethtool -k docker0 | grep tcp-segmentation-offload | awk -F': ' '{ print $2}')
gso=$(ethtool -k docker0 | grep generic-segmentation-offload | awk -F': ' '{ print $2}')
gro=$(ethtool -k docker0 | grep generic-receive-offload | awk -F': ' '{ print $2}')

if [ $tso == on ] || [ $gso == on ] || [ $gro == on ]; then

    echo "Please run the following commands:"

fi

if [ $tso == on ]; then
    echo "sudo ethtool -K docker0 tso off"
fi
if [ $gso == on ]; then
    echo "sudo ethtool -K docker0 gso off"
fi
if [ $gro == on ]; then
    echo "sudo ethtool -K docker0 gro off"
fi

